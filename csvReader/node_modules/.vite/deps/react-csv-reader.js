import {
  __commonJS,
  require_react
} from "./chunk-FOPRWXCF.js";

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), { expectedType });
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-csv-reader/dist/react-csv-reader.js
var require_react_csv_reader = __commonJS({
  "node_modules/react-csv-reader/dist/react-csv-reader.js"(exports, module) {
    module.exports = function(e) {
      var t = {};
      function r(i) {
        if (t[i])
          return t[i].exports;
        var n = t[i] = { i, l: false, exports: {} };
        return e[i].call(n.exports, n, n.exports, r), n.l = true, n.exports;
      }
      return r.m = e, r.c = t, r.d = function(e2, t2, i) {
        r.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: i });
      }, r.r = function(e2) {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      }, r.t = function(e2, t2) {
        if (1 & t2 && (e2 = r(e2)), 8 & t2)
          return e2;
        if (4 & t2 && typeof e2 == "object" && e2 && e2.__esModule)
          return e2;
        var i = /* @__PURE__ */ Object.create(null);
        if (r.r(i), Object.defineProperty(i, "default", { enumerable: true, value: e2 }), 2 & t2 && typeof e2 != "string")
          for (var n in e2)
            r.d(i, n, function(t3) {
              return e2[t3];
            }.bind(null, n));
        return i;
      }, r.n = function(e2) {
        var t2 = e2 && e2.__esModule ? function() {
          return e2.default;
        } : function() {
          return e2;
        };
        return r.d(t2, "a", t2), t2;
      }, r.o = function(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }, r.p = "", r(r.s = 0);
    }([function(e, t, r) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      const i = r(1), n = r(2), s = r(3), a = ({ accept: e2 = ".csv, text/csv", cssClass: t2 = "csv-reader-input", cssInputClass: r2 = "csv-input", cssLabelClass: n2 = "csv-label", fileEncoding: a2 = "UTF-8", inputId: o = "react-csv-reader-input", inputName: u = "react-csv-reader-input", inputStyle: h = {}, inputRef: f, label: l, onError: d = () => {
      }, onFileLoaded: c, parserOptions: p = {}, disabled: g = false, strict: m = false }) => i.createElement("div", { className: t2 }, l && i.createElement("label", { className: n2, htmlFor: o }, l), i.createElement("input", { className: r2, type: "file", id: o, name: u, style: h, accept: e2, onChange: (t3) => {
        let r3 = new FileReader();
        const i2 = t3.target.files;
        if (i2.length > 0) {
          const t4 = { name: i2[0].name, size: i2[0].size, type: i2[0].type };
          if (m && e2.indexOf(t4.type) <= 0)
            return void d(new Error(`[strict mode] Accept type not respected: got '${t4.type}' but not in '${e2}'`));
          r3.onload = (e3) => {
            var n3;
            const o2 = s.parse(r3.result, Object.assign(p, { error: d, encoding: a2 }));
            c((n3 = o2 == null ? void 0 : o2.data) !== null && n3 !== void 0 ? n3 : [], t4, i2[0]);
          }, r3.readAsText(i2[0], a2);
        }
      }, disabled: g, ref: f }));
      a.propTypes = { accept: n.string, cssClass: n.string, cssInputClass: n.string, cssLabelClass: n.string, fileEncoding: n.string, inputId: n.string, inputName: n.string, inputStyle: n.object, inputRef: n.func, label: n.oneOfType([n.string, n.element]), onError: n.func, onFileLoaded: n.func.isRequired, parserOptions: n.object, disabled: n.bool, strict: n.bool }, t.default = a;
    }, function(e, t) {
      e.exports = require_react();
    }, function(e, t) {
      e.exports = require_prop_types();
    }, function(e, t, r) {
      var i, n, s;
      n = [], (s = typeof (i = function e2() {
        "use strict";
        var t2 = typeof self != "undefined" ? self : typeof window != "undefined" ? window : t2 !== void 0 ? t2 : {}, r2 = !t2.document && !!t2.postMessage, i2 = r2 && /blob:/i.test((t2.location || {}).protocol), n2 = {}, s2 = 0, a = { parse: function(r3, i3) {
          var o2 = (i3 = i3 || {}).dynamicTyping || false;
          if (k(o2) && (i3.dynamicTypingFunction = o2, o2 = {}), i3.dynamicTyping = o2, i3.transform = !!k(i3.transform) && i3.transform, i3.worker && a.WORKERS_SUPPORTED) {
            var u2 = function() {
              if (!a.WORKERS_SUPPORTED)
                return false;
              var r4, i4, o3 = (r4 = t2.URL || t2.webkitURL || null, i4 = e2.toString(), a.BLOB_URL || (a.BLOB_URL = r4.createObjectURL(new Blob(["(", i4, ")();"], { type: "text/javascript" })))), u3 = new t2.Worker(o3);
              return u3.onmessage = m, u3.id = s2++, n2[u3.id] = u3;
            }();
            return u2.userStep = i3.step, u2.userChunk = i3.chunk, u2.userComplete = i3.complete, u2.userError = i3.error, i3.step = k(i3.step), i3.chunk = k(i3.chunk), i3.complete = k(i3.complete), i3.error = k(i3.error), delete i3.worker, void u2.postMessage({ input: r3, config: i3, workerId: u2.id });
          }
          var c2 = null;
          return a.NODE_STREAM_INPUT, typeof r3 == "string" ? c2 = i3.download ? new h(i3) : new l(i3) : r3.readable === true && k(r3.read) && k(r3.on) ? c2 = new d(i3) : (t2.File && r3 instanceof File || r3 instanceof Object) && (c2 = new f(i3)), c2.stream(r3);
        }, unparse: function(e3, t3) {
          var r3 = false, i3 = true, n3 = ",", s3 = "\r\n", o2 = '"', u2 = o2 + o2, h2 = false, f2 = null, l2 = false;
          !function() {
            if (typeof t3 == "object") {
              if (typeof t3.delimiter != "string" || a.BAD_DELIMITERS.filter(function(e4) {
                return t3.delimiter.indexOf(e4) !== -1;
              }).length || (n3 = t3.delimiter), (typeof t3.quotes == "boolean" || typeof t3.quotes == "function" || Array.isArray(t3.quotes)) && (r3 = t3.quotes), typeof t3.skipEmptyLines != "boolean" && typeof t3.skipEmptyLines != "string" || (h2 = t3.skipEmptyLines), typeof t3.newline == "string" && (s3 = t3.newline), typeof t3.quoteChar == "string" && (o2 = t3.quoteChar), typeof t3.header == "boolean" && (i3 = t3.header), Array.isArray(t3.columns)) {
                if (t3.columns.length === 0)
                  throw new Error("Option columns is empty");
                f2 = t3.columns;
              }
              t3.escapeChar !== void 0 && (u2 = t3.escapeChar + o2), typeof t3.escapeFormulae == "boolean" && (l2 = t3.escapeFormulae);
            }
          }();
          var d2 = new RegExp(p(o2), "g");
          if (typeof e3 == "string" && (e3 = JSON.parse(e3)), Array.isArray(e3)) {
            if (!e3.length || Array.isArray(e3[0]))
              return g2(null, e3, h2);
            if (typeof e3[0] == "object")
              return g2(f2 || c2(e3[0]), e3, h2);
          } else if (typeof e3 == "object")
            return typeof e3.data == "string" && (e3.data = JSON.parse(e3.data)), Array.isArray(e3.data) && (e3.fields || (e3.fields = e3.meta && e3.meta.fields), e3.fields || (e3.fields = Array.isArray(e3.data[0]) ? e3.fields : c2(e3.data[0])), Array.isArray(e3.data[0]) || typeof e3.data[0] == "object" || (e3.data = [e3.data])), g2(e3.fields || [], e3.data || [], h2);
          throw new Error("Unable to serialize unrecognized input");
          function c2(e4) {
            if (typeof e4 != "object")
              return [];
            var t4 = [];
            for (var r4 in e4)
              t4.push(r4);
            return t4;
          }
          function g2(e4, t4, r4) {
            var a2 = "";
            typeof e4 == "string" && (e4 = JSON.parse(e4)), typeof t4 == "string" && (t4 = JSON.parse(t4));
            var o3 = Array.isArray(e4) && 0 < e4.length, u3 = !Array.isArray(t4[0]);
            if (o3 && i3) {
              for (var h3 = 0; h3 < e4.length; h3++)
                0 < h3 && (a2 += n3), a2 += m2(e4[h3], h3);
              0 < t4.length && (a2 += s3);
            }
            for (var f3 = 0; f3 < t4.length; f3++) {
              var l3 = o3 ? e4.length : t4[f3].length, d3 = false, c3 = o3 ? Object.keys(t4[f3]).length === 0 : t4[f3].length === 0;
              if (r4 && !o3 && (d3 = r4 === "greedy" ? t4[f3].join("").trim() === "" : t4[f3].length === 1 && t4[f3][0].length === 0), r4 === "greedy" && o3) {
                for (var p2 = [], g3 = 0; g3 < l3; g3++) {
                  var _2 = u3 ? e4[g3] : g3;
                  p2.push(t4[f3][_2]);
                }
                d3 = p2.join("").trim() === "";
              }
              if (!d3) {
                for (var y2 = 0; y2 < l3; y2++) {
                  0 < y2 && !c3 && (a2 += n3);
                  var v2 = o3 && u3 ? e4[y2] : y2;
                  a2 += m2(t4[f3][v2], y2);
                }
                f3 < t4.length - 1 && (!r4 || 0 < l3 && !c3) && (a2 += s3);
              }
            }
            return a2;
          }
          function m2(e4, t4) {
            if (e4 == null)
              return "";
            if (e4.constructor === Date)
              return JSON.stringify(e4).slice(1, 25);
            l2 === true && typeof e4 == "string" && e4.match(/^[=+\-@].*$/) !== null && (e4 = "'" + e4);
            var i4 = e4.toString().replace(d2, u2);
            return typeof r3 == "boolean" && r3 || typeof r3 == "function" && r3(e4, t4) || Array.isArray(r3) && r3[t4] || function(e5, t5) {
              for (var r4 = 0; r4 < t5.length; r4++)
                if (-1 < e5.indexOf(t5[r4]))
                  return true;
              return false;
            }(i4, a.BAD_DELIMITERS) || -1 < i4.indexOf(n3) || i4.charAt(0) === " " || i4.charAt(i4.length - 1) === " " ? o2 + i4 + o2 : i4;
          }
        } };
        if (a.RECORD_SEP = String.fromCharCode(30), a.UNIT_SEP = String.fromCharCode(31), a.BYTE_ORDER_MARK = "\uFEFF", a.BAD_DELIMITERS = ["\r", "\n", '"', a.BYTE_ORDER_MARK], a.WORKERS_SUPPORTED = !r2 && !!t2.Worker, a.NODE_STREAM_INPUT = 1, a.LocalChunkSize = 10485760, a.RemoteChunkSize = 5242880, a.DefaultDelimiter = ",", a.Parser = g, a.ParserHandle = c, a.NetworkStreamer = h, a.FileStreamer = f, a.StringStreamer = l, a.ReadableStreamStreamer = d, t2.jQuery) {
          var o = t2.jQuery;
          o.fn.parse = function(e3) {
            var r3 = e3.config || {}, i3 = [];
            return this.each(function(e4) {
              if (o(this).prop("tagName").toUpperCase() !== "INPUT" || o(this).attr("type").toLowerCase() !== "file" || !t2.FileReader || !this.files || this.files.length === 0)
                return true;
              for (var n4 = 0; n4 < this.files.length; n4++)
                i3.push({ file: this.files[n4], inputElem: this, instanceConfig: o.extend({}, r3) });
            }), n3(), this;
            function n3() {
              if (i3.length !== 0) {
                var t3, r4, n4, u2 = i3[0];
                if (k(e3.before)) {
                  var h2 = e3.before(u2.file, u2.inputElem);
                  if (typeof h2 == "object") {
                    if (h2.action === "abort")
                      return t3 = u2.file, r4 = u2.inputElem, n4 = h2.reason, void (k(e3.error) && e3.error({ name: "AbortError" }, t3, r4, n4));
                    if (h2.action === "skip")
                      return void s3();
                    typeof h2.config == "object" && (u2.instanceConfig = o.extend(u2.instanceConfig, h2.config));
                  } else if (h2 === "skip")
                    return void s3();
                }
                var f2 = u2.instanceConfig.complete;
                u2.instanceConfig.complete = function(e4) {
                  k(f2) && f2(e4, u2.file, u2.inputElem), s3();
                }, a.parse(u2.file, u2.instanceConfig);
              } else
                k(e3.complete) && e3.complete();
            }
            function s3() {
              i3.splice(0, 1), n3();
            }
          };
        }
        function u(e3) {
          this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, function(e4) {
            var t3 = v(e4);
            t3.chunkSize = parseInt(t3.chunkSize), e4.step || e4.chunk || (t3.chunkSize = null), this._handle = new c(t3), (this._handle.streamer = this)._config = t3;
          }.call(this, e3), this.parseChunk = function(e4, r3) {
            if (this.isFirstChunk && k(this._config.beforeFirstChunk)) {
              var n3 = this._config.beforeFirstChunk(e4);
              n3 !== void 0 && (e4 = n3);
            }
            this.isFirstChunk = false, this._halted = false;
            var s3 = this._partialLine + e4;
            this._partialLine = "";
            var o2 = this._handle.parse(s3, this._baseIndex, !this._finished);
            if (!this._handle.paused() && !this._handle.aborted()) {
              var u2 = o2.meta.cursor;
              this._finished || (this._partialLine = s3.substring(u2 - this._baseIndex), this._baseIndex = u2), o2 && o2.data && (this._rowCount += o2.data.length);
              var h2 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
              if (i2)
                t2.postMessage({ results: o2, workerId: a.WORKER_ID, finished: h2 });
              else if (k(this._config.chunk) && !r3) {
                if (this._config.chunk(o2, this._handle), this._handle.paused() || this._handle.aborted())
                  return void (this._halted = true);
                o2 = void 0, this._completeResults = void 0;
              }
              return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(o2.data), this._completeResults.errors = this._completeResults.errors.concat(o2.errors), this._completeResults.meta = o2.meta), this._completed || !h2 || !k(this._config.complete) || o2 && o2.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), h2 || o2 && o2.meta.paused || this._nextChunk(), o2;
            }
            this._halted = true;
          }, this._sendError = function(e4) {
            k(this._config.error) ? this._config.error(e4) : i2 && this._config.error && t2.postMessage({ workerId: a.WORKER_ID, error: e4, finished: false });
          };
        }
        function h(e3) {
          var t3;
          (e3 = e3 || {}).chunkSize || (e3.chunkSize = a.RemoteChunkSize), u.call(this, e3), this._nextChunk = r2 ? function() {
            this._readChunk(), this._chunkLoaded();
          } : function() {
            this._readChunk();
          }, this.stream = function(e4) {
            this._input = e4, this._nextChunk();
          }, this._readChunk = function() {
            if (this._finished)
              this._chunkLoaded();
            else {
              if (t3 = new XMLHttpRequest(), this._config.withCredentials && (t3.withCredentials = this._config.withCredentials), r2 || (t3.onload = b(this._chunkLoaded, this), t3.onerror = b(this._chunkError, this)), t3.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !r2), this._config.downloadRequestHeaders) {
                var e4 = this._config.downloadRequestHeaders;
                for (var i3 in e4)
                  t3.setRequestHeader(i3, e4[i3]);
              }
              if (this._config.chunkSize) {
                var n3 = this._start + this._config.chunkSize - 1;
                t3.setRequestHeader("Range", "bytes=" + this._start + "-" + n3);
              }
              try {
                t3.send(this._config.downloadRequestBody);
              } catch (e5) {
                this._chunkError(e5.message);
              }
              r2 && t3.status === 0 && this._chunkError();
            }
          }, this._chunkLoaded = function() {
            t3.readyState === 4 && (t3.status < 200 || 400 <= t3.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : t3.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e4) {
              var t4 = e4.getResponseHeader("Content-Range");
              return t4 === null ? -1 : parseInt(t4.substring(t4.lastIndexOf("/") + 1));
            }(t3), this.parseChunk(t3.responseText)));
          }, this._chunkError = function(e4) {
            var r3 = t3.statusText || e4;
            this._sendError(new Error(r3));
          };
        }
        function f(e3) {
          var t3, r3;
          (e3 = e3 || {}).chunkSize || (e3.chunkSize = a.LocalChunkSize), u.call(this, e3);
          var i3 = typeof FileReader != "undefined";
          this.stream = function(e4) {
            this._input = e4, r3 = e4.slice || e4.webkitSlice || e4.mozSlice, i3 ? ((t3 = new FileReader()).onload = b(this._chunkLoaded, this), t3.onerror = b(this._chunkError, this)) : t3 = new FileReaderSync(), this._nextChunk();
          }, this._nextChunk = function() {
            this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
          }, this._readChunk = function() {
            var e4 = this._input;
            if (this._config.chunkSize) {
              var n3 = Math.min(this._start + this._config.chunkSize, this._input.size);
              e4 = r3.call(e4, this._start, n3);
            }
            var s3 = t3.readAsText(e4, this._config.encoding);
            i3 || this._chunkLoaded({ target: { result: s3 } });
          }, this._chunkLoaded = function(e4) {
            this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e4.target.result);
          }, this._chunkError = function() {
            this._sendError(t3.error);
          };
        }
        function l(e3) {
          var t3;
          u.call(this, e3 = e3 || {}), this.stream = function(e4) {
            return t3 = e4, this._nextChunk();
          }, this._nextChunk = function() {
            if (!this._finished) {
              var e4, r3 = this._config.chunkSize;
              return r3 ? (e4 = t3.substring(0, r3), t3 = t3.substring(r3)) : (e4 = t3, t3 = ""), this._finished = !t3, this.parseChunk(e4);
            }
          };
        }
        function d(e3) {
          u.call(this, e3 = e3 || {});
          var t3 = [], r3 = true, i3 = false;
          this.pause = function() {
            u.prototype.pause.apply(this, arguments), this._input.pause();
          }, this.resume = function() {
            u.prototype.resume.apply(this, arguments), this._input.resume();
          }, this.stream = function(e4) {
            this._input = e4, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
          }, this._checkIsFinished = function() {
            i3 && t3.length === 1 && (this._finished = true);
          }, this._nextChunk = function() {
            this._checkIsFinished(), t3.length ? this.parseChunk(t3.shift()) : r3 = true;
          }, this._streamData = b(function(e4) {
            try {
              t3.push(typeof e4 == "string" ? e4 : e4.toString(this._config.encoding)), r3 && (r3 = false, this._checkIsFinished(), this.parseChunk(t3.shift()));
            } catch (e5) {
              this._streamError(e5);
            }
          }, this), this._streamError = b(function(e4) {
            this._streamCleanUp(), this._sendError(e4);
          }, this), this._streamEnd = b(function() {
            this._streamCleanUp(), i3 = true, this._streamData("");
          }, this), this._streamCleanUp = b(function() {
            this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
          }, this);
        }
        function c(e3) {
          var t3, r3, i3, n3 = Math.pow(2, 53), s3 = -n3, o2 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)(e[-+]?\d+)?\s*$/, u2 = /(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))/, h2 = this, f2 = 0, l2 = 0, d2 = false, c2 = false, m2 = [], _2 = { data: [], errors: [], meta: {} };
          if (k(e3.step)) {
            var y2 = e3.step;
            e3.step = function(t4) {
              if (_2 = t4, w())
                E();
              else {
                if (E(), _2.data.length === 0)
                  return;
                f2 += t4.data.length, e3.preview && f2 > e3.preview ? r3.abort() : (_2.data = _2.data[0], y2(_2, h2));
              }
            };
          }
          function b2(t4) {
            return e3.skipEmptyLines === "greedy" ? t4.join("").trim() === "" : t4.length === 1 && t4[0].length === 0;
          }
          function E() {
            if (_2 && i3 && (R("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + a.DefaultDelimiter + "'"), i3 = false), e3.skipEmptyLines)
              for (var t4 = 0; t4 < _2.data.length; t4++)
                b2(_2.data[t4]) && _2.data.splice(t4--, 1);
            return w() && function() {
              if (_2)
                if (Array.isArray(_2.data[0])) {
                  for (var t5 = 0; w() && t5 < _2.data.length; t5++)
                    _2.data[t5].forEach(r4);
                  _2.data.splice(0, 1);
                } else
                  _2.data.forEach(r4);
              function r4(t6, r5) {
                k(e3.transformHeader) && (t6 = e3.transformHeader(t6, r5)), m2.push(t6);
              }
            }(), function() {
              if (!_2 || !e3.header && !e3.dynamicTyping && !e3.transform)
                return _2;
              function t5(t6, r5) {
                var i4, n4 = e3.header ? {} : [];
                for (i4 = 0; i4 < t6.length; i4++) {
                  var s4 = i4, a2 = t6[i4];
                  e3.header && (s4 = i4 >= m2.length ? "__parsed_extra" : m2[i4]), e3.transform && (a2 = e3.transform(a2, s4)), a2 = C(s4, a2), s4 === "__parsed_extra" ? (n4[s4] = n4[s4] || [], n4[s4].push(a2)) : n4[s4] = a2;
                }
                return e3.header && (i4 > m2.length ? R("FieldMismatch", "TooManyFields", "Too many fields: expected " + m2.length + " fields but parsed " + i4, l2 + r5) : i4 < m2.length && R("FieldMismatch", "TooFewFields", "Too few fields: expected " + m2.length + " fields but parsed " + i4, l2 + r5)), n4;
              }
              var r4 = 1;
              return !_2.data.length || Array.isArray(_2.data[0]) ? (_2.data = _2.data.map(t5), r4 = _2.data.length) : _2.data = t5(_2.data, 0), e3.header && _2.meta && (_2.meta.fields = m2), l2 += r4, _2;
            }();
          }
          function w() {
            return e3.header && m2.length === 0;
          }
          function C(t4, r4) {
            return i4 = t4, e3.dynamicTypingFunction && e3.dynamicTyping[i4] === void 0 && (e3.dynamicTyping[i4] = e3.dynamicTypingFunction(i4)), (e3.dynamicTyping[i4] || e3.dynamicTyping) === true ? r4 === "true" || r4 === "TRUE" || r4 !== "false" && r4 !== "FALSE" && (function(e4) {
              if (o2.test(e4)) {
                var t5 = parseFloat(e4);
                if (s3 < t5 && t5 < n3)
                  return true;
              }
              return false;
            }(r4) ? parseFloat(r4) : u2.test(r4) ? new Date(r4) : r4 === "" ? null : r4) : r4;
            var i4;
          }
          function R(e4, t4, r4, i4) {
            var n4 = { type: e4, code: t4, message: r4 };
            i4 !== void 0 && (n4.row = i4), _2.errors.push(n4);
          }
          this.parse = function(n4, s4, o3) {
            var u3 = e3.quoteChar || '"';
            if (e3.newline || (e3.newline = function(e4, t4) {
              e4 = e4.substring(0, 1048576);
              var r4 = new RegExp(p(t4) + "([^]*?)" + p(t4), "gm"), i4 = (e4 = e4.replace(r4, "")).split("\r"), n5 = e4.split("\n"), s5 = 1 < n5.length && n5[0].length < i4[0].length;
              if (i4.length === 1 || s5)
                return "\n";
              for (var a2 = 0, o4 = 0; o4 < i4.length; o4++)
                i4[o4][0] === "\n" && a2++;
              return a2 >= i4.length / 2 ? "\r\n" : "\r";
            }(n4, u3)), i3 = false, e3.delimiter)
              k(e3.delimiter) && (e3.delimiter = e3.delimiter(n4), _2.meta.delimiter = e3.delimiter);
            else {
              var h3 = function(t4, r4, i4, n5, s5) {
                var o4, u4, h4, f4;
                s5 = s5 || [",", "	", "|", ";", a.RECORD_SEP, a.UNIT_SEP];
                for (var l3 = 0; l3 < s5.length; l3++) {
                  var d3 = s5[l3], c3 = 0, p2 = 0, m3 = 0;
                  h4 = void 0;
                  for (var _3 = new g({ comments: n5, delimiter: d3, newline: r4, preview: 10 }).parse(t4), y3 = 0; y3 < _3.data.length; y3++)
                    if (i4 && b2(_3.data[y3]))
                      m3++;
                    else {
                      var v2 = _3.data[y3].length;
                      p2 += v2, h4 !== void 0 ? 0 < v2 && (c3 += Math.abs(v2 - h4), h4 = v2) : h4 = v2;
                    }
                  0 < _3.data.length && (p2 /= _3.data.length - m3), (u4 === void 0 || c3 <= u4) && (f4 === void 0 || f4 < p2) && 1.99 < p2 && (u4 = c3, o4 = d3, f4 = p2);
                }
                return { successful: !!(e3.delimiter = o4), bestDelimiter: o4 };
              }(n4, e3.newline, e3.skipEmptyLines, e3.comments, e3.delimitersToGuess);
              h3.successful ? e3.delimiter = h3.bestDelimiter : (i3 = true, e3.delimiter = a.DefaultDelimiter), _2.meta.delimiter = e3.delimiter;
            }
            var f3 = v(e3);
            return e3.preview && e3.header && f3.preview++, t3 = n4, r3 = new g(f3), _2 = r3.parse(t3, s4, o3), E(), d2 ? { meta: { paused: true } } : _2 || { meta: { paused: false } };
          }, this.paused = function() {
            return d2;
          }, this.pause = function() {
            d2 = true, r3.abort(), t3 = k(e3.chunk) ? "" : t3.substring(r3.getCharIndex());
          }, this.resume = function() {
            h2.streamer._halted ? (d2 = false, h2.streamer.parseChunk(t3, true)) : setTimeout(h2.resume, 3);
          }, this.aborted = function() {
            return c2;
          }, this.abort = function() {
            c2 = true, r3.abort(), _2.meta.aborted = true, k(e3.complete) && e3.complete(_2), t3 = "";
          };
        }
        function p(e3) {
          return e3.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
        }
        function g(e3) {
          var t3, r3 = (e3 = e3 || {}).delimiter, i3 = e3.newline, n3 = e3.comments, s3 = e3.step, o2 = e3.preview, u2 = e3.fastMode, h2 = t3 = e3.quoteChar === void 0 ? '"' : e3.quoteChar;
          if (e3.escapeChar !== void 0 && (h2 = e3.escapeChar), (typeof r3 != "string" || -1 < a.BAD_DELIMITERS.indexOf(r3)) && (r3 = ","), n3 === r3)
            throw new Error("Comment character same as delimiter");
          n3 === true ? n3 = "#" : (typeof n3 != "string" || -1 < a.BAD_DELIMITERS.indexOf(n3)) && (n3 = false), i3 !== "\n" && i3 !== "\r" && i3 !== "\r\n" && (i3 = "\n");
          var f2 = 0, l2 = false;
          this.parse = function(e4, a2, d2) {
            if (typeof e4 != "string")
              throw new Error("Input must be a string");
            var c2 = e4.length, g2 = r3.length, m2 = i3.length, _2 = n3.length, y2 = k(s3), v2 = [], b2 = [], E = [], w = f2 = 0;
            if (!e4)
              return z();
            if (u2 || u2 !== false && e4.indexOf(t3) === -1) {
              for (var C = e4.split(i3), R = 0; R < C.length; R++) {
                if (E = C[R], f2 += E.length, R !== C.length - 1)
                  f2 += i3.length;
                else if (d2)
                  return z();
                if (!n3 || E.substring(0, _2) !== n3) {
                  if (y2) {
                    if (v2 = [], L(E.split(r3)), q(), l2)
                      return z();
                  } else
                    L(E.split(r3));
                  if (o2 && o2 <= R)
                    return v2 = v2.slice(0, o2), z(true);
                }
              }
              return z();
            }
            for (var O = e4.indexOf(r3, f2), x = e4.indexOf(i3, f2), S = new RegExp(p(h2) + p(t3), "g"), T = e4.indexOf(t3, f2); ; )
              if (e4[f2] !== t3)
                if (n3 && E.length === 0 && e4.substring(f2, f2 + _2) === n3) {
                  if (x === -1)
                    return z();
                  f2 = x + m2, x = e4.indexOf(i3, f2), O = e4.indexOf(r3, f2);
                } else {
                  if (O !== -1 && (O < x || x === -1)) {
                    if (!(O < T)) {
                      E.push(e4.substring(f2, O)), f2 = O + g2, O = e4.indexOf(r3, f2);
                      continue;
                    }
                    var I = P(O, T, x);
                    if (I && I.nextDelim !== void 0) {
                      O = I.nextDelim, T = I.quoteSearch, E.push(e4.substring(f2, O)), f2 = O + g2, O = e4.indexOf(r3, f2);
                      continue;
                    }
                  }
                  if (x === -1)
                    break;
                  if (E.push(e4.substring(f2, x)), M(x + m2), y2 && (q(), l2))
                    return z();
                  if (o2 && v2.length >= o2)
                    return z(true);
                }
              else
                for (T = f2, f2++; ; ) {
                  if ((T = e4.indexOf(t3, T + 1)) === -1)
                    return d2 || b2.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: v2.length, index: f2 }), j();
                  if (T === c2 - 1)
                    return j(e4.substring(f2, T).replace(S, t3));
                  if (t3 !== h2 || e4[T + 1] !== h2) {
                    if (t3 === h2 || T === 0 || e4[T - 1] !== h2) {
                      O !== -1 && O < T + 1 && (O = e4.indexOf(r3, T + 1)), x !== -1 && x < T + 1 && (x = e4.indexOf(i3, T + 1));
                      var D = F(x === -1 ? O : Math.min(O, x));
                      if (e4[T + 1 + D] === r3) {
                        E.push(e4.substring(f2, T).replace(S, t3)), e4[f2 = T + 1 + D + g2] !== t3 && (T = e4.indexOf(t3, f2)), O = e4.indexOf(r3, f2), x = e4.indexOf(i3, f2);
                        break;
                      }
                      var A = F(x);
                      if (e4.substring(T + 1 + A, T + 1 + A + m2) === i3) {
                        if (E.push(e4.substring(f2, T).replace(S, t3)), M(T + 1 + A + m2), O = e4.indexOf(r3, f2), T = e4.indexOf(t3, f2), y2 && (q(), l2))
                          return z();
                        if (o2 && v2.length >= o2)
                          return z(true);
                        break;
                      }
                      b2.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: v2.length, index: f2 }), T++;
                    }
                  } else
                    T++;
                }
            return j();
            function L(e5) {
              v2.push(e5), w = f2;
            }
            function F(t4) {
              var r4 = 0;
              if (t4 !== -1) {
                var i4 = e4.substring(T + 1, t4);
                i4 && i4.trim() === "" && (r4 = i4.length);
              }
              return r4;
            }
            function j(t4) {
              return d2 || (t4 === void 0 && (t4 = e4.substring(f2)), E.push(t4), f2 = c2, L(E), y2 && q()), z();
            }
            function M(t4) {
              f2 = t4, L(E), E = [], x = e4.indexOf(i3, f2);
            }
            function z(e5) {
              return { data: v2, errors: b2, meta: { delimiter: r3, linebreak: i3, aborted: l2, truncated: !!e5, cursor: w + (a2 || 0) } };
            }
            function q() {
              s3(z()), v2 = [], b2 = [];
            }
            function P(i4, n4, s4) {
              var a3 = { nextDelim: void 0, quoteSearch: void 0 }, o3 = e4.indexOf(t3, n4 + 1);
              if (n4 < i4 && i4 < o3 && (o3 < s4 || s4 === -1)) {
                var u3 = e4.indexOf(r3, o3);
                if (u3 === -1)
                  return a3;
                o3 < u3 && (o3 = e4.indexOf(t3, o3 + 1)), a3 = P(u3, o3, s4);
              } else
                a3 = { nextDelim: i4, quoteSearch: n4 };
              return a3;
            }
          }, this.abort = function() {
            l2 = true;
          }, this.getCharIndex = function() {
            return f2;
          };
        }
        function m(e3) {
          var t3 = e3.data, r3 = n2[t3.workerId], i3 = false;
          if (t3.error)
            r3.userError(t3.error, t3.file);
          else if (t3.results && t3.results.data) {
            var s3 = { abort: function() {
              i3 = true, _(t3.workerId, { data: [], errors: [], meta: { aborted: true } });
            }, pause: y, resume: y };
            if (k(r3.userStep)) {
              for (var a2 = 0; a2 < t3.results.data.length && (r3.userStep({ data: t3.results.data[a2], errors: t3.results.errors, meta: t3.results.meta }, s3), !i3); a2++)
                ;
              delete t3.results;
            } else
              k(r3.userChunk) && (r3.userChunk(t3.results, s3, t3.file), delete t3.results);
          }
          t3.finished && !i3 && _(t3.workerId, t3.results);
        }
        function _(e3, t3) {
          var r3 = n2[e3];
          k(r3.userComplete) && r3.userComplete(t3), r3.terminate(), delete n2[e3];
        }
        function y() {
          throw new Error("Not implemented.");
        }
        function v(e3) {
          if (typeof e3 != "object" || e3 === null)
            return e3;
          var t3 = Array.isArray(e3) ? [] : {};
          for (var r3 in e3)
            t3[r3] = v(e3[r3]);
          return t3;
        }
        function b(e3, t3) {
          return function() {
            e3.apply(t3, arguments);
          };
        }
        function k(e3) {
          return typeof e3 == "function";
        }
        return i2 && (t2.onmessage = function(e3) {
          var r3 = e3.data;
          if (a.WORKER_ID === void 0 && r3 && (a.WORKER_ID = r3.workerId), typeof r3.input == "string")
            t2.postMessage({ workerId: a.WORKER_ID, results: a.parse(r3.input, r3.config), finished: true });
          else if (t2.File && r3.input instanceof File || r3.input instanceof Object) {
            var i3 = a.parse(r3.input, r3.config);
            i3 && t2.postMessage({ workerId: a.WORKER_ID, results: i3, finished: true });
          }
        }), (h.prototype = Object.create(u.prototype)).constructor = h, (f.prototype = Object.create(u.prototype)).constructor = f, (l.prototype = Object.create(l.prototype)).constructor = l, (d.prototype = Object.create(u.prototype)).constructor = d, a;
      }) == "function" ? i.apply(t, n) : i) === void 0 || (e.exports = s);
    }]);
  }
});

// dep:react-csv-reader
var react_csv_reader_default = require_react_csv_reader();
export {
  react_csv_reader_default as default
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* @license
Papa Parse
v5.3.0
https://github.com/mholt/PapaParse
License: MIT
*/
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=react-csv-reader.js.map
